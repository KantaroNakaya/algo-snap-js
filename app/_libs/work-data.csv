title,description,templateCode,answer01_code,answer01_desc,answer02_code,answer02_desc,answer03_code,answer03_desc
Q1. 文字列を逆にせよ,与えられた文字列を逆順にして返す関数 `reverseString` を作成してください。,"function reverseString(str) {
  // ここに書くコードを考えてください
}","let result = '';
for (let i = str.length - 1; i >= 0; i--) {
  result += str[i];
}
return result;",末尾から1文字ずつ結合,return str.split('').reverse().join('');,配列操作で一括変換,return Array.from(str).reverse().join('');,Array.fromで文字列変換
Q2. 配列の合計を求めよ,整数の配列を受け取り、その合計を返す関数 `sumArray` を作成してください。,"function sumArray(arr) {
  // ここに書くコードを考えてください
}","let total = 0;
for (let i = 0; i < arr.length; i++) {
  total += arr[i];
}
return total;",for文で順次加算,"return arr.reduce((sum, n) => sum + n, 0);",reduceで集計,,
Q3. 偶数のみ抽出,整数配列から偶数だけを抽出して返す関数 `filterEven` を作成してください。,"function filterEven(arr) {
  // ここに書くコードを考えてください
}","const result = [];
for (let i = 0; i < arr.length; i++) {
  if (arr[i] % 2 === 0) {
    result.push(arr[i]);
  }
}
return result;",for文で条件分岐,return arr.filter(n => n % 2 === 0);,filterで条件抽出,,
Q4. 文字数をカウントせよ,与えられた文字列の長さを返す関数 `getLength` を作成してください。,"function getLength(str) {
  // ここに書くコードを考えてください
}","let count = 0;
for (let i = 0; i < str.length; i++) {
  count++;
}
return count;",for文で1文字ずつカウント,return str.length;,lengthプロパティ使用,,
Q5. 最大値を見つけよ,整数の配列から最大値を返す関数 `getMax` を作成してください。,"function getMax(arr) {
  // ここに書くコードを考えてください
}","let max = arr[0];
for (let i = 1; i < arr.length; i++) {
  if (arr[i] > max) {
    max = arr[i];
  }
}
return max;",for文で最大値更新,return Math.max(...arr);,Math.maxで一括取得,,
Q6. 配列をソートせよ,整数配列を昇順にソートする関数 `sortArray` を作成してください。バブルソートを使用してください。,"function sortArray(arr) {
  // ここに書くコードを考えてください
}","const result = [...arr];
for (let i = 0; i < result.length - 1; i++) {
  for (let j = 0; j < result.length - i - 1; j++) {
    if (result[j] > result[j + 1]) {
      const temp = result[j];
      result[j] = result[j + 1];
      result[j + 1] = temp;
    }
  }
}
return result;",バブルソート実装,"return arr.sort((a, b) => a - b);",sortメソッド使用,,
Q7. 二分探索,ソート済みの整数配列から特定の値を探す関数 `binarySearch` を作成してください。,"function binarySearch(arr, target) {
  // ここに書くコードを考えてください
}","let left = 0;
let right = arr.length - 1;
while (left <= right) {
  const mid = Math.floor((left + right) / 2);
  if (arr[mid] === target) return mid;
  if (arr[mid] < target) left = mid + 1;
  else right = mid - 1;
}
return -1;",範囲を半分ずつ探索,return arr.indexOf(target);,indexOfで線形探索,,
Q8. フィボナッチ数列,n番目のフィボナッチ数を返す関数 `fibonacci` を作成してください。,"function fibonacci(n) {
  // ここに書くコードを考えてください
}","if (n <= 1) return n;
let a = 0, b = 1;
for (let i = 2; i <= n; i++) {
  [a, b] = [b, a + b];
}
return b;",反復で計算,"if (n <= 1) return n;
return fibonacci(n - 1) + fibonacci(n - 2);",再帰で計算,"const memo = {};
function fib(n) {
  if (n in memo) return memo[n];
  if (n <= 1) return n;
  memo[n] = fib(n - 1) + fib(n - 2);
  return memo[n];
}
return fib(n);",メモ化で最適化
Q9. 回文判定,与えられた文字列が回文かどうかを判定する関数 `isPalindrome` を作成してください。,"function isPalindrome(str) {
  // ここに書くコードを考えてください
}","let left = 0;
let right = str.length - 1;
while (left < right) {
  if (str[left] !== str[right]) return false;
  left++;
  right--;
}
return true;",両端から比較,return str === str.split('').reverse().join('');,反転して比較,"const cleanStr = str.toLowerCase().replace(/[^a-z0-9]/g, '');
return cleanStr === cleanStr.split('').reverse().join('');",正規表現で前処理
Q10. 配列の重複を削除,配列から重複する要素を削除する関数 `removeDuplicates` を作成してください。,"function removeDuplicates(arr) {
  // ここに書くコードを考えてください
}","const result = [];
for (const item of arr) {
  if (!result.includes(item)) {
    result.push(item);
  }
}
return result;",for文で重複チェック,return [...new Set(arr)];,Setで一括削除,"return arr.filter((item, index) => arr.indexOf(item) === index);",filterで重複除去
