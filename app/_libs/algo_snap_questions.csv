id,title,description,templateCode,answerCode01,answerCode02,answerCode03
1,"Q1. 文字列を逆にせよ","与えられた文字列を逆順にして返す関数 `reverseString` を作成してください。","function reverseString(str) {\n  // ここに書くコードを考えてください\n}","return str.split('').reverse().join('');","let result = '';\nfor (let i = str.length - 1; i >= 0; i--) {\n  result += str[i];\n}\nreturn result;","return Array.from(str).reverse().join('');"
2,"Q2. 配列の合計を求めよ","整数の配列を受け取り、その合計を返す関数 `sumArray` を作成してください。","function sumArray(arr) {\n  // ここに書くコードを考えてください\n}","let total = 0;\nfor (let i = 0; i < arr.length; i++) {\n  total += arr[i];\n}\nreturn total;","return arr.reduce((sum, n) => sum + n, 0);","return arr.reduce((a, b) => a + b);"
3,"Q3. 偶数のみ抽出","整数配列から偶数だけを抽出して返す関数 `filterEven` を作成してください。","function filterEven(arr) {\n  // ここに書くコードを考えてください\n}","return arr.filter(n => n % 2 === 0);","const result = [];\nfor (let i = 0; i < arr.length; i++) {\n  if (arr[i] % 2 === 0) {\n    result.push(arr[i]);\n  }\n}\nreturn result;","const result = [];\nfor (const num of arr) {\n  if (num % 2 === 0) {\n    result.push(num);\n  }\n}\nreturn result;"
4,"Q4. 文字数をカウントせよ","与えられた文字列の長さを返す関数 `getLength` を作成してください。","function getLength(str) {\n  // ここに書くコードを考えてください\n}","return str.length;","let count = 0;\nfor (let i = 0; i < str.length; i++) {\n  count++;\n}\nreturn count;","let count = 0;\nfor (const char of str) {\n  count++;\n}\nreturn count;"
5,"Q5. 最大値を見つけよ","整数の配列から最大値を返す関数 `getMax` を作成してください。","function getMax(arr) {\n  // ここに書くコードを考えてください\n}","let max = arr[0];\nfor (let n of arr) {\n  if (n > max) max = n;\n}\nreturn max;","return Math.max(...arr);","let max = arr[0];\nfor (let i = 1; i < arr.length; i++) {\n  if (arr[i] > max) {\n    max = arr[i];\n  }\n}\nreturn max;"
6,"Q6. 配列をソートせよ","整数配列を昇順にソートする関数 `sortArray` を作成してください。バブルソートを使用してください。","function sortArray(arr) {\n  // ここに書くコードを考えてください\n}","return arr.sort((a, b) => a - b);","for (let i = 0; i < arr.length - 1; i++) {\n  for (let j = 0; j < arr.length - i - 1; j++) {\n    if (arr[j] > arr[j + 1]) {\n      [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n    }\n  }\n}\nreturn arr;","const result = [...arr];\nfor (let i = 0; i < result.length - 1; i++) {\n  for (let j = 0; j < result.length - i - 1; j++) {\n    if (result[j] > result[j + 1]) {\n      const temp = result[j];\n      result[j] = result[j + 1];\n      result[j + 1] = temp;\n    }\n  }\n}\nreturn result;"
7,"Q7. 二分探索","ソート済みの整数配列から特定の値を探す関数 `binarySearch` を作成してください。","function binarySearch(arr, target) {\n  // ここに書くコードを考えてください\n}","let left = 0;\nlet right = arr.length - 1;\nwhile (left <= right) {\n  const mid = Math.floor((left + right) / 2);\n  if (arr[mid] === target) return mid;\n  if (arr[mid] < target) left = mid + 1;\n  else right = mid - 1;\n}\nreturn -1;","return arr.indexOf(target);","for (let i = 0; i < arr.length; i++) {\n  if (arr[i] === target) return i;\n}\nreturn -1;"
8,"Q8. フィボナッチ数列","n番目のフィボナッチ数を返す関数 `fibonacci` を作成してください。","function fibonacci(n) {\n  // ここに書くコードを考えてください\n}","if (n <= 1) return n;\nreturn fibonacci(n - 1) + fibonacci(n - 2);","if (n <= 1) return n;\nlet a = 0, b = 1;\nfor (let i = 2; i <= n; i++) {\n  [a, b] = [b, a + b];\n}\nreturn b;","const memo = {};\nfunction fib(n) {\n  if (n in memo) return memo[n];\n  if (n <= 1) return n;\n  memo[n] = fib(n - 1) + fib(n - 2);\n  return memo[n];\n}\nreturn fib(n);"
9,"Q9. 回文判定","与えられた文字列が回文かどうかを判定する関数 `isPalindrome` を作成してください。","function isPalindrome(str) {\n  // ここに書くコードを考えてください\n}","return str === str.split('').reverse().join('');","let left = 0;\nlet right = str.length - 1;\nwhile (left < right) {\n  if (str[left] !== str[right]) return false;\n  left++;\n  right--;\n}\nreturn true;","const cleanStr = str.toLowerCase().replace(/[^a-z0-9]/g, '');\nreturn cleanStr === cleanStr.split('').reverse().join('');"
10,"Q10. 配列の重複を削除","配列から重複する要素を削除する関数 `removeDuplicates` を作成してください。","function removeDuplicates(arr) {\n  // ここに書くコードを考えてください\n}","return [...new Set(arr)];","const result = [];\nfor (const item of arr) {\n  if (!result.includes(item)) {\n    result.push(item);\n  }\n}\nreturn result;","return arr.filter((item, index) => arr.indexOf(item) === index);" 